# The URI to the RabbitMQ server. This property is ignored if 
# $ZENHOME/etc/global.conf can be read in which the AMQP URI will be 
# built from the properties found in that location.
zep.amqp.uri=amqp://zenoss:zenoss@localhost:5672/zenoss

# The maximum number of concurrent API archive requests. Zero for no limit
zep.archive.max_requests=0

# The number of milliseconds to wait between connection retries
zep.amqp.retry=60000

# The default maximum number of events returned in an event query
zep.query.limit=1000

# Enable throttling zenevents consumer when
# len(event_summary_index_queue) >  zep.index.throttle_threshold
#zep.index.throttle=true

# Threshold at which consumer throttling is enabled, 0 is automatically sets it to 2 * zep.index.limit
#zep.index.throttle_threshold=10000

# Number of ms for event consumer to sleep when throttling
#zep.index.throttle_sleep=1000

# The maximum number of minutes a closed event may not be seen again before moving to archive.
zep.max_event_archive_interval_minutes=43200

# JDBC Protocol
# Loaded from global.conf zep_db_type first, then falls back to the definition in this file.
zep.jdbc.protocol=mysql

# JDBC Hostname
# Loaded from global.conf zep_host first, then falls back to the definition in this file.
zep.jdbc.hostname=localhost

# JDBC Port
# Loaded from global.conf zep_port first, then falls back to the definition in this file.
zep.jdbc.port=3306

# JDBC Database Name
# Loaded from global.conf zep_db first, then falls back to the definition in this file.
zep.jdbc.dbname=zenoss_zep

# JDBC Username
# Loaded from global.conf zep_user first, then falls back to the definition in this file.
zep.jdbc.username=zenoss

# JDBC Password
# Loaded from global.conf zep_password first, then falls back to the definition in this file.
zep.jdbc.password=zenoss

# The default auto commit state of pooled connections
zep.jdbc.pool.default_auto_commit=false

# The default read only state of pooled connections
zep.jdbc.pool.default_read_only=false

# The default transaction isolation of pooled connections
zep.jdbc.pool.default_transaction_isolation=2

# The maximum number of active connections in the pool
zep.jdbc.pool.max_active=50

# The maximum number of idle connections in the pool
zep.jdbc.pool.max_idle=25

# The minimum number of idle connections in the pool
zep.jdbc.pool.min_idle=3

# The initial number of connections in the pool
zep.jdbc.pool.initial_size=3

# The maximum amount of time to wait for a connection from the pool
zep.jdbc.pool.max_wait=-1

# Whether to validate connections when borrowing from the pool
zep.jdbc.pool.test_on_borrow=true

# Whether to validate connections when returning to the pool
zep.jdbc.pool.test_on_return=false

# Whether to validation connections periodically while idle
zep.jdbc.pool.test_while_idle=false

# Amount of time between idle connection validation, abandoned cleaner, and
# idle pool resizing.
zep.jdbc.pool.time_between_eviction_runs_millis=5000

# Amount of time before a connection is considered idle
zep.jdbc.pool.min_evictable_idle_time_millis=60000

# Interceptors to run
zep.jdbc.pool.jdbc_interceptors=ConnectionState

# How often to validate connections in the pool
zep.jdbc.pool.validation_interval=30000

# Whether JMX can be used to configure the pool
zep.jdbc.pool.jmx_enabled=true

# True if a fair queue is used by the connection pool.
zep.jdbc.pool.fair_queue=true

# Timed out connections will get closed when this percentage of the pool is full.
zep.jdbc.pool.abandon_when_percentage_full=0

# Time in milliseconds to keep connections alive.
zep.jdbc.pool.max_age=0

# Set to true if ProxyConnection class should use String.equals instead of ==
# when comparing method names.
zep.jdbc.pool.use_equals=true

# Whether to remove abandoned connections if they exceed the
# remove_abandoned_timeout.
zep.jdbc.pool.remove_abandoned=false

# The amount of time (in seconds) before a connection is considered abandoned.
zep.jdbc.pool.remove_abandoned_timeout=60

# Whether to log stack traces of abandoned connections.
zep.jdbc.pool.log_abandoned=false

# Instead of abandoning connections, logs a warning if log_abandoned is true.
# If this value is <= 0, then no suspect checking will be performed.
zep.jdbc.pool.suspect_timeout=0

# The default number of retries performed when a database deadlock is encountered.
zep.jdbc.deadlock_retries=5

# The core pool size used by the primary executor service.
# By default, this is set to the number of processors in the system.
#zep.executor.core_pool_size=4

# The maximum pool size used by the primary executor service.
# By default, this is set to the number of processors in the system.
#zep.executor.max_pool_size=4

# The maximum number of entries waiting to execute on the executor service.
# Changed to default of Integer.MAX_VALUE because AMQP QOS settings prevent
# overwhelming system.
zep.executor.queue_capacity=2147483647

# AMQP QOS prefetch_count settings for queues consumed by zeneventserver.
# These should only need to be changed if there is significant latency
# between the AMQP server and zeneventserver.
zep.queue.$ZepHeartbeats.prefetch_count=100
zep.queue.$ZepMigratedEventSummary.prefetch_count=100
zep.queue.$ZepMigratedEventArchive.prefetch_count=100
zep.queue.$ZepModelChange.prefetch_count=1
zep.queue.$ZepZenEvents.prefetch_count=100

# Index Directory
zep.index.dir=var/zeneventserver/index

# Index RAM buffer size
zep.index.ram_buffer_size_mb=16.0

# Heartbeat check interval in seconds
zep.heartbeat.interval_seconds=60

# Database optimization is performed on this interval (in minutes). Specify an interval <= 0 to disable.
zep.database.optimize_minutes=720
zep.database.optimize_use_external_tool=true
zep.database.optimize_external_tool_path=/var/zenoss/percona/bin
zep.database.optimize_external_tool_options=
zep.database.optimize_elapsed_warn_threshold_seconds=120

## Comma separated list of ZEP plug-ins to disable.
#zep.plugins.disabled=

## Whether to disable all external ZEP plug-ins (from ZenPacks).
zep.plugins.external.disabled=false

## Optional configuration settings for each plug-in
#plugin.<ID>.<NAME>=<VALUE>

## The default number of trigger rule compilations to cache.
#plugin.TriggerPlugin.triggerRuleCacheSize=200

## Partitioning parameters for partitioned tables in ZEP.
##
## Values are:
##
##   partition.<table>.unit = The TimeUnit of each partition.
##   partition.<table>.duration = The duration of each partition.
##   partition.<table>.initial_past_partitions = The initial number of partitions to create in the past.
##   partition.<table>.future_partitions = The number of future partitions to maintain.
##

partition.event_archive.unit=DAYS
partition.event_archive.duration=1
# We want to configure the maximum number of initial partitions for migration.
partition.event_archive.initial_past_partitions=90
partition.event_archive.future_partitions=3

partition.event_time.unit=HOURS
partition.event_time.duration=1
# We want to configure the maximum number of initial partitions for migration.
partition.event_time.initial_past_partitions=0
partition.event_time.future_partitions=2

# redis connection
zep.redis.host=localhost
zep.redis.port=6379

# Max number of search terms allowed in a zeneventserver query for events
# zep.query.clause_limit=1024

## The amount of time zep will cache search results from the index
#zep.query.cache_refresh_interval=10
#zep.query.archive_cache_refresh_interval=60

# The maximum time a lucene search is allowed to run
#zep.query.lucene_search_timeout=30

# The time between posting metrics
#zep.metrics.post.period=30s

# The number of entries kept in the tag severity LRU cache
#zep.query.tagSeverityCacheSize=0

# The number of seconds after which an entry in the tag severity cache MUST expire (the system MAY refresh more often)
#zep.query.tagSeverityCacheTTL=3600

#enable using redis to configure backends and rebuilding individual backends
#zep.backend.configure.use.redis=false

# solr related properties only take effect if zep.solr.index.enable is true
#
# enable solr
# zep.solr.index.enable=false

# solr connection url  TODO: currently ZEP breaks if solr enable and this URL does not work
# zep.solr.url=http://localhost:8080/solr/

# TODO:describe solr summary settings
#zep.solr.summary.status=WRITER
#zep.solr.summary.async.updates=true
#zep.solr.summary.honor.deletes=false

# TODO:describe solr archive settings
#zep.solr.archive.status=WRITER
#zep.solr.archive.async.updates=true
#zep.solr.archive.honor.deletes=true

# TODO:describe lucene archive settings
#zep.lucene.archive.status=READER
#zep.lucene.archive.async.updates=false
#zep.lucene.archive.honor.deletes=true
